plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace = "com.cheocharm.remote"

    compileSdk 34

    defaultConfig {
        minSdk 23
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "BASE_URL", properties['base.url']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation project(":data")
    implementation project(":domain")

    def retrofitVersion = "2.9.0"

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test.ext:junit:$junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"

    // Hilt
    implementation "com.google.dagger:hilt-core:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    // kotlin coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"

    // paging
    implementation "androidx.paging:paging-runtime:$pagingVersion"
}
